// MSP430FR6989 + L298N simple motor test (no PWM)
// ENA = P2.6, ENB = P2.7
// IN1 = P1.3, IN2 = P3.0, IN3 = P3.1, IN4 = P2.3

#include <msp430.h>
#include <msp430fr6989.h>

#define IN1 BIT3   // P1.3
#define IN2 BIT0   // P3.0
#define IN3 BIT1   // P3.1
#define IN4 BIT3   // P2.3
#define ENA BIT6   // P2.6
#define ENB BIT7   // P2.7

void delay_ms(unsigned int ms) {
    while (ms--) __delay_cycles(16000); // ~1 ms @16 MHz
}

int main(void) {
    WDTCTL = WDTPW | WDTHOLD;      // Stop watchdog
    PM5CTL0 &= ~LOCKLPM5;          // Unlock GPIO from high-impedance

    // Set direction for pins
    P1DIR |= IN1;
    P3DIR |= IN2 | IN3;
    P2DIR |= IN4 | ENA | ENB;

    // Enable the motors
    P2OUT |= ENA | ENB;

    while (1) {
        // Forward
        P1OUT |= IN1;   // IN1 = 1
        P3OUT &= ~IN2;  // IN2 = 0
        P3OUT |= IN3;   // IN3 = 1
        P2OUT &= ~IN4;  // IN4 = 0
        delay_ms(2000);

        // Stop
        P1OUT &= ~IN1;
        P3OUT &= ~IN2;
        P3OUT &= ~IN3;
        P2OUT &= ~IN4;
        delay_ms(1000);

        // Reverse
        P1OUT &= ~IN1;  // IN1 = 0
        P3OUT |= IN2;   // IN2 = 1
        P3OUT &= ~IN3;  // IN3 = 0
        P2OUT |= IN4;   // IN4 = 1
        delay_ms(2000);

        // Stop
        P1OUT &= ~IN1;
        P3OUT &= ~IN2;
        P3OUT &= ~IN3;
        P2OUT &= ~IN4;
        delay_ms(1000);
    }
}
