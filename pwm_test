#include <msp430fr6989.h>

#define F_CPU    8000000UL
#define PWM_HZ   1000UL               // 1 kHz PWM
#define PERIOD   (F_CPU / PWM_HZ)     // 8000

/* Direction pins */
#define IN1_BIT  BIT3   // P1.3
#define IN2_BIT  BIT0   // P3.0
#define IN3_BIT  BIT1   // P3.1
#define IN4_BIT  BIT3   // P2.3

/* PWM pins */
#define ENA_BIT  BIT3   // P3.3 (TA1.1)
#define ENB_BIT  BIT6   // P3.6 (TB0.2)

#define LED1     BIT0   // P1.0 (onboard LED)

static void clock_8MHz(void){
    CSCTL0_H = CSKEY_H;
    CSCTL1 = DCOFSEL_6;  // DCO ~8 MHz
    CSCTL2 = SELM__DCOCLK | SELS__DCOCLK | SELA__VLOCLK;
    CSCTL3 = DIVM__1 | DIVS__1 | DIVA__1;
    CSCTL0_H = 0;
}

int main(void){
    WDTCTL = WDTPW | WDTHOLD; // stop watchdog
    clock_8MHz();

    // LED for heartbeat
    P1DIR |= LED1;
    P1OUT &= ~LED1;

    // ---- Direction pins ----
    P1DIR |= IN1_BIT; P1OUT &= ~IN1_BIT;   // P1.3
    P3DIR |= IN2_BIT; P3OUT &= ~IN2_BIT;   // P3.0
    P3DIR |= IN3_BIT; P3OUT &= ~IN3_BIT;   // P3.1
    P2DIR |= IN4_BIT; P2OUT &= ~IN4_BIT;   // P2.3

    // Forward direction
    P1OUT |= IN1_BIT;   // IN1=1
    P3OUT &= ~IN2_BIT;  // IN2=0
    P3OUT |= IN3_BIT;   // IN3=1
    P2OUT &= ~IN4_BIT;  // IN4=0

    // ---- PWM A: P3.3 = TA1.1 ----
    P3DIR  |= ENA_BIT;
    P3SEL1 |= ENA_BIT;
    P3SEL0 &= ~ENA_BIT;

    TA1CCR0  = PERIOD - 1;
    TA1CCR1  = (PERIOD * 50) / 100; // 50% duty
    TA1CCTL1 = OUTMOD_7;            // reset/set
    TA1CTL   = TASSEL__SMCLK | MC__UP | TACLR;

    // ---- PWM B: P3.6 = TB0.2 ----
    P3DIR  |= ENB_BIT;
    P3SEL1 |= ENB_BIT;
    P3SEL0 &= ~ENB_BIT;

    TB0CCR0  = PERIOD - 1;
    TB0CCR2  = (PERIOD * 50) / 100; // 50% duty
    TB0CCTL2 = OUTMOD_7;
    TB0CTL   = TBSSEL__SMCLK | MC__UP | TBCLR;

    // ---- Main loop ----
    while(1){
        volatile unsigned long d=400000;
        P1OUT ^= LED1; // blink LED so you know itâ€™s running
        while(d--) __no_operation();
    }
}
